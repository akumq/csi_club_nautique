services:
  server:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./backend:/app/backend/
      - ./frontend:/app/frontend/
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:8080"
    env_file:
      - .env
    networks:
      - app-network

  postgres:
    image: postgres:latest
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - app-network

  adminer:
    image: adminer:latest
    ports:
      - "${ADMINER_PORT}:8080"
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: